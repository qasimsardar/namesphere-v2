{"file":"/home/runner/workspace/server/__tests__/setup.ts","mappings":";;AAAA,2CAAiF;AACjF,8BAA2B;AAC3B,6CAAkC;AAElC,iCAAiC;AACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;AAC9B,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,qBAAqB,CAAC;AACnD,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,gBAAgB,CAAC;AAC9C,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,cAAc,CAAC;AACrC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,yBAAyB,CAAC;AAEnD,2CAA2C;AAC3C,cAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAEvB,oBAAoB;AACpB,IAAA,mBAAS,EAAC,KAAK,IAAI,EAAE;IACnB,qCAAqC;IACrC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QAC9B,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;IAC/E,CAAC;IAED,6BAA6B;IAC7B,IAAI,CAAC;QACH,MAAM,OAAE,CAAC,OAAO,CAAC,IAAA,iBAAG,EAAA,UAAU,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;IACxD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;QAC9D,OAAO,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;QACtE,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,2BAA2B;AAC3B,IAAA,mBAAS,EAAC,KAAK,IAAI,EAAE;IACnB,IAAI,CAAC;QACH,sDAAsD;QACtD,MAAM,OAAE,CAAC,OAAO,CAAC,IAAA,iBAAG,EAAA,oDAAoD,CAAC,CAAC;QAC1E,MAAM,OAAE,CAAC,OAAO,CAAC,IAAA,iBAAG,EAAA,oDAAoD,CAAC,CAAC;QAC1E,MAAM,OAAE,CAAC,OAAO,CAAC,IAAA,iBAAG,EAAA,0DAA0D,CAAC,CAAC;QAChF,MAAM,OAAE,CAAC,OAAO,CAAC,IAAA,iBAAG,EAAA,0CAA0C,CAAC,CAAC;QAChE,MAAM,OAAE,CAAC,OAAO,CAAC,IAAA,iBAAG,EAAA,8CAA8C,CAAC,CAAC;IACtE,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,IAAI,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;IAChE,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,kBAAkB;AAClB,IAAA,kBAAQ,EAAC,KAAK,IAAI,EAAE;IAClB,4BAA4B;IAC5B,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC","names":[],"sources":["/home/runner/workspace/server/__tests__/setup.ts"],"sourcesContent":["import { beforeAll, afterAll, beforeEach, afterEach, jest } from '@jest/globals';\nimport { db } from '../db';\nimport { sql } from 'drizzle-orm';\n\n// Set test environment variables\nprocess.env.NODE_ENV = 'test';\nprocess.env.SESSION_SECRET = 'test-session-secret';\nprocess.env.REPLIT_DOMAINS = 'localhost:5000';\nprocess.env.REPL_ID = 'test-repl-id';\nprocess.env.ISSUER_URL = 'https://replit.com/oidc';\n\n// Increase timeout for database operations\njest.setTimeout(30000);\n\n// Global test setup\nbeforeAll(async () => {\n  // Ensure we have a test database URL\n  if (!process.env.DATABASE_URL) {\n    throw new Error('DATABASE_URL environment variable is required for testing');\n  }\n  \n  // Verify database connection\n  try {\n    await db.execute(sql`SELECT 1`);\n    console.log('✅ Test database connection established');\n  } catch (error) {\n    console.error('❌ Failed to connect to test database:', error);\n    console.error('Please ensure DATABASE_URL points to a test database');\n    throw error;\n  }\n});\n\n// Clean up after each test\nafterEach(async () => {\n  try {\n    // Clean up test data in reverse order of dependencies\n    await db.execute(sql`DELETE FROM audit_logs WHERE user_id LIKE 'test-%'`);\n    await db.execute(sql`DELETE FROM identities WHERE user_id LIKE 'test-%'`);\n    await db.execute(sql`DELETE FROM user_credentials WHERE user_id LIKE 'test-%'`);\n    await db.execute(sql`DELETE FROM users WHERE id LIKE 'test-%'`);\n    await db.execute(sql`DELETE FROM sessions WHERE sid LIKE 'test-%'`);\n  } catch (error) {\n    console.warn('Warning: Failed to clean up test data:', error);\n  }\n});\n\n// Global teardown\nafterAll(async () => {\n  // Close database connection\n  console.log('🧹 Cleaning up test environment');\n});"],"version":3}